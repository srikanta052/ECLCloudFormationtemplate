AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: The ID of the existing VPC where the resources will be created.
  StackName:
    Type: String
    Description: A unique name for the CloudFormation stack.
  Subnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet 1 ID in Availability Zone 1
  Subnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet 2 ID in Availability Zone 2
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  
  KeyName:
    Description: Name of an EC2 KeyPair to enable SSH access to the instance.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.    
Mappings:
  RegionMap:
    us-east-1:
      HVM64: ami-0ff8a91507f77f867
      HVMG2: ami-0a584ac55a7631c0c
    us-west-1:
      HVM64: ami-0bdb828fd58c52235
      HVMG2: ami-066ee5fd4a9ef77f1
    eu-west-1:
      HVM64: ami-047bb4163c506cd98
      HVMG2: ami-0a7c483d527806435
    ap-northeast-1:
      HVM64: ami-06cd52961ce9f0d85
      HVMG2: ami-053cdd503598e4a9d
    ap-southeast-1:
      HVM64: ami-08569b978cc4dfa10
      HVMG2: ami-0be9df32ae9f92309 
 
Resources:
  ElasticBeanstalkApplication:
    Type: 'AWS::ElasticBeanstalk::Application'
    Properties:
      ApplicationName: SampleElasticBeanstalkApp

  ElasticBeanstalkEnvironment:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      
      PlatformArn: arn:aws:elasticbeanstalk:us-east-1::platform/Python 3.9 running on 64bit Amazon Linux 2023/4.0.4
      #SolutionStackName: 64bit Amazon Linux 2023 v4.0.4 running Python 3.9
      
  ElasticLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
     Type: application
     Subnets:
      - !Ref Subnet1Id
      - !Ref Subnet2Id
  ElasticLoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancer
      Port: 80
      Protocol: HTTP
  ElasticLoadBalancerListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ElasticBeanstalkEnvironmentTargetGroup
      Conditions:
        - Field: path-pattern
          Values:
            - /stress
      ListenerArn: !Ref ElasticLoadBalancerListener
      Priority: 1
  ElasticBeanstalkEnvironmentTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
  AutoScalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      MinSize: 2
      MaxSize: 4
      DesiredCapacity: 2
      LaunchConfigurationName: !Ref AutoScalingLaunchConfiguration
      AvailabilityZones:    
       - us-east-1a
       - us-east-1b
  AutoScalingLaunchConfiguration:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref LaunchConfigurationSecurityGroup
  LaunchConfigurationSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0  
   
        
  CPUUtilizationScaleOutPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: ScaleOut
      AdjustmentType: PercentChangeInCapacity
      Adjustment: 100
      Cooldown: 5
      ScalingTriggers:
        - MetricName: CPUUtilization
          Statistic: Average
          Period: 60
          Threshold: 80
          ComparisonOperator: GreaterThanThreshold
          EvaluationPeriods: 5
  CPUUtilizationScaleInPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: ScaleIn
      AdjustmentType: PercentChangeInCapacity
      Adjustment: -100
      Cooldown: 60
      ScalingTriggers:
        - MetricName: CPUUtilization
          Statistic: Average
          Period: 60
          Threshold: 30
          ComparisonOperator: LessThanThreshold
          EvaluationPeriods: 10
          
Outputs:
  ElasticBeanstalkEnvironmentURL:
    Description: The URL of the Elastic Beanstalk environment.
    Value: !Sub 'http://${ElasticLoadBalancer.DNSName}/'